snippet vimrc "Boilerplaite vimrc" b
set nocompatible

let g:plugin_dir = expand('~/.vim/dein')
let g:dein_dir = g:plugin_dir . '/repos/github.com/Shougo/dein.vim'
execute 'set runtimepath+=' . g:dein_dir

if !isdirectory(g:dein_dir)
  call mkdir(g:dein_dir, 'p')
  silent execute printf('!git clone --depth 1 %s %s', 'http://github.com/Shougo/dein.vim', g:dein_dir)
endif

call dein#begin(g:plugin_dir)

" Let dein manage dein
call dein#add('Shougo/dein.vim')
" call dein#add('Shougo/vimproc.vim', {'build': 'make'})
" call dein#add('Shougo/unite.vim')
	$0
sall dein#end()

if dein#check_install() 
  call dein#install()
endif

filetype plugin indent on
endsnippet

snippet ab "Add bundle" b
call dein#add('$1')
$0
endsnippet

snippet fun "Function" b
function! $1($2) abort
	$0
endfunction
endsnippet

snippet if "if" b
if $1
	$0
endif
endsnippet

snippet exists "exists" w
exists("$1")
endsnippet

snippet todo "TODO"
" TODO: $0
endsnippet

snippet fix "FIX"
" FIX: $0
endsnippet

snippet note "NOTE"
" NOTE: $0
endsnippet

snippet tag "TAGS"
" TAGS: $0
endsnippet

snippet debug "Debug" 
call DEBUG('$1')$0
endsnippet

snippet info "info" 
call INFO('$1')$0
endsnippet

snippet infoo "infoo" 
call INFO('$1: ', $1)$0
endsnippet

snippet neobundle "Description" b
" ${1:description}
NeoBundle '${2:plugin name or github url}'
endsnippet

snippet neobundlepost "do something after plugin is loaded" b
if neobundle#tap('${1:plugin name}') 
  function! neobundle#hooks.on_post_source(bundle) abort
		$0
  endfunction
  call neobundle#untap()
endif
endsnippet

snippet command "command" b
command! -nargs=* ${1:name} call $1(<f-args>)}
function! $1(...) abort
	$0
endfunction
endsnippet

snippet / "comment" b
" 
endsnippet
