priority -50

snippet s "String" b
"${1:key}": "${0:value}",
endsnippet

snippet n "Number" b
"${1:key}": ${0:value},
endsnippet

snippet a "Array" b
[
	${VISUAL}$0
],
endsnippet

snippet na "Named array" b
"${1:key}": [
	${VISUAL}$0
],
endsnippet

snippet o "Object" b
{
	${VISUAL}$0
},
endsnippet

snippet no "Named object" b
"${1:key}": {
	${VISUAL}$0
},
endsnippet

snippet null "Null" b
"${0:key}": null,
endsnippet

global !p
def compB(t, opts):
	if t:
		opts = [m[len(t):] for m in opts if m.startswith(t)]
	if len(opts) == 1:
		return opts[0]
	return "(" + '|'.join(opts) + ')'
endglobal

snippet b "Bool" b
"${1:key}": $2`!p snip.rv=compB(t[2], ['true', 'false'])`,
endsnippet

snippet pm2_config "pm2_config" b
{
  "apps": [{
    "name": process.env.npm_package_name,
    "script": "./bin/app.sh",
    "watch": true,
    "ignore_watch" : ["./test/test.rest"],
    "restart_delay": 500,
    "max_restarts": 1,
    "min_uptime": 5000,
    "max_memory_restart": "200M"
  }]
}
endsnippet

snippet pm2_package_json "pm2_package_json" b
"scripts": {
	"setup": "npm install -g bower && bower install",
	"start": "pm2 start pm2.json",
	"stop": "pm2 stop pm2.json",
	"restart": "pm2 restart pm2.json",
	"status": "pm2 ls pm2.json",
	"logs": "pm2 logs --lines 100 pm2.json",
	"monitor": "pm2 monit pm2.json",
	"dev": "bash bin/app.sh -d"
},
endsnippet
